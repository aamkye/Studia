name: Pack it all

on:
  push:
    paths:
      - 'Przedmiot/**.md'
    # branches:
    #   - master
    tags:
      - '*'

jobs:
  get_files:
    runs-on: ubuntu-latest
    outputs:
      files: ${{ steps.files_list.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
      - id: files_list
        run: echo "matrix=$(ls Przedmiot/*.md | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT
      - run: tree .

  convert_via_pandoc:
    needs: get_files
    runs-on: ubuntu-latest
    strategy:
      matrix:
        file: ${{ fromJson(needs.get_files.outputs.files) }}
    steps:
      - uses: actions/checkout@v3
      - run: tree .
      - uses: mad9000/actions-find-and-replace-string@3
        id: path
        with:
          source: ${{ matrix.file }}
          find: '/.*'
          replace: ''
      - uses: mad9000/actions-find-and-replace-string@3
        id: file_without_path
        with:
          source: ${{ matrix.file }}
          find: 'Przedmiot/'
          replace: ''
      - uses: mad9000/actions-find-and-replace-string@3
        id: file_without_path_end_extension
        with:
          source: ${{ steps.file_without_path.outputs.value }}
          find: '.md'
          replace: ''
      - id: prepare_output
        run: |
          mkdir -p output
      - run: tree .
      - uses: docker://pandoc/latex:latest
        with:
          args: >-
            --output="output/${{ steps.file_without_path_end_extension.outputs.value }}.pdf"
            --from=markdown
            --to=pdf
            "${{ matrix.file }}"
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.file_without_path_end_extension.outputs.value }}.pdf
          path: output/${{ steps.file_without_path_end_extension.outputs.value }}.pdf
          if-no-files-found: error
      - run: tree .

  release:
    needs: convert_via_pandoc
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: tree .
      - uses: actions/download-artifact@v3
      - run: tree .
      - uses: ncipollo/release-action@v1
        with:
          name: Release ${{ github.ref_name }}
          artifacts: "output/*.pdf"
          tag: ${{ github.ref_name }}
          commit: ${{ github.sha }}
